name: Build and Push "docker-test" Images

on:
  push:
    branches:
      - main  # mainブランチにpushされたときに実行
  workflow_dispatch:  # 手動のActionsトリガー

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: docker-test
  TEXLIVE_VER: 24
  IMAGE_VER: 0

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    # イメージの対象アーキテクチャを指定
    strategy:
      matrix:
        arch:
          - amd64
          - arm64

    # イメージをプッシュする権限をGITHUB_TOKENに付与
    permissions:
      contents: read  # コードを読み取る権限
      packages: write  # ghcr.ioにパッケージをpushする権限

    steps:
      # GitHubリポジトリをチェックアウト
      - name: Checkout repository
        uses: actions/checkout@v3

      # イメージタグの生成
      - name: create image tag
        run: |
          REV=0
          while git show-ref --tags | grep -q "refs/tags/${{ env.TEXLIVE_VER }}.${{ env.IMAGE_VER }}.${REV}"; do
          REV=$((REV+1))
          done
          echo "IMAGE_TAG=${{ env.TEXLIVE_VER }}.${REV}" >> $GITHUB_ENV

      # ghcr.ioにログイン
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
        
      # QEMUのセットアップ
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: linux/${{ matrix.arch }}
      
      # Docker Buildxのセットアップ
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # メタデータを生成（latestタグを追加）
      - name: Extract metadata for Docker image
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/hirotnk1118/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest # mainブランチにpushされた場合にlatestタグを付与
            type=raw,value=${{ env.IMAGE_TAG }}  # ブランチベースのタグ

      # Dockerイメージをビルドしてghcr.ioにプッシュ
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          # 対応するアーキテクチャを指定
          platforms: linux/${{ matrix.arch }}
          # イメージタグを指定
          tags: ${{ steps.meta.outputs.tags }}
          # キャッシュの利用
          cache-from: type=gha
          cache-to: type=gha, mode=max
  
  release-to-github:
    runs-on: ubuntu-latest
    # リリースをプッシュする権限をGITHUB_TOKENに付与
    permissions:
      contents: write  # releaseをpushする権限

    steps:
      # GitHubリポジトリをチェックアウト
      - name: Checkout repository
        uses: actions/checkout@v3

      # リリースタグの生成
      - name: create image tag
        run: |
          REV=0
          while git show-ref --tags | grep -q "refs/tags/${{ env.TEXLIVE_VER }}.${{ env.IMAGE_VER }}.${REV}"; do
          REV=$((REV+1))
          done
          echo "IMAGE_TAG=${{ env.TEXLIVE_VER }}.${REV}" >> $GITHUB_ENV

      # GitHubリポジトリにリリースを作成
      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.IMAGE_TAG }}
          release_name: docker-test-base ${{ env.IMAGE_TAG }}
          body: |
            ## リリースノート
            自動生成されたリリースです
          draft: true
